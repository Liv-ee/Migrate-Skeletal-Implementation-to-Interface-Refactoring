Name=Migrate Skeletal Implementation To Interface
MethodsNotSpecified=No methods to refactor.
CheckingPreconditions=Checking preconditions...
CompilingSource=Compiling source ...
CreatingChange=Creating change...
CUContainsCompileErrors=Compilation unit ''{0}'' contains compile errors.
MethodDoesNotExist=Method ''{0}'' does not exist.
PreconditionFailed=No methods have passed precondition checking.
RefactoringNotPossible=Method ''{0}'' has been deemed not to be a skeletal implementation and therefore in its current state cannot be refactored by this plugin.
WrongType=Internal error: node ''{0}'' must be of a simple name type, instead its type was ''{1}''
CantChangeMethod=Need access to source code of method ''{0}''.
NoConstructors=Constructors are invalid for this refactoring.
NoAnnotations=At this time, annotated methods are not supported by this refactoring.
NoStaticMethods=At this time, static methods are not supported by this refactoring.
NoMethodsInInterfaces=Method ''{0}'' is already in an interface.
MethodsOnlyInClasses=At this time, only methods in classes are supported.
NoMethodsInAnnotatedTypes=At this time, methods cannot be in types that are annotated.
NoMethodsInTypesWithFields=''{0}'' is a type that contains a field.
NoMethodsInTypesWithInitializers=''{0}'' is a type that contains an initializer.
NoMethodsInTypesWithMoreThanOneMethod=''{0}'' is a type that contains more than one method.
NoMethodsInTypesWithTypeParameters=''{0}'' is a type that contains type parameters.
NoMethodsInTypesWithType=''{0}'' is a type that contains types.
NoMethodsInTypesWithSuperType=''{0}'' is a type that has a super type.
NoMethodsInTypesThatDontImplementInterfaces=''{0}'' is a type that does not implement an interface.
NoMethodsInAnonymousTypes=''{0}'' is a type that is anonymous.
NoMethodsInEnums=Method ''{0}'' is an enum type.
NoMethodsInLambdas=''{0}'' is a lambda type.
NoMethodsInLocals=''{0}'' is in a local type.
NoMethodsInMemberTypes=''{0}'' is a member type.
NoLambdaMethods=Method ''{0}'' is a lambda method.
NoMethodsInTypesThatExtendMultipleInterfaces=''{0}'' is a type that implements multiple interfaces.
NoMethodsThatThrowExceptions=Method ''{0}'' throws an exception.
NoMethodsInConcreteTypes=''{0}'' is a concrete type.
NoMethodsInStaticTypes=''{0}'' is a static type.
NoMethodsWithParameters=Method ''{0}'' has parameters.
NoMethodsWithReturnTypes=Method ''{0}'' has a return type.
NoMethodsWithTypeParameters=Method ''{0}'' has type parameters.
NoMethodsWithStatements=Method ''{0}'' has statements.
NoMethodsInBinaryTypes=Method ''{0}'' is in a binary type.
NoMethodsInReadOnlyTypes=Method ''{0}'' is in a read-only type.
NoMethodsInTypesWithNoCandidateTargetTypes=Migration is not available on type ''{0}'', since it does not have super interfaces to which methods could be migrated.
NoMethodsInTypesWithMultipleCandidateTargetTypes=Migration is not available on type ''{0}'', since it has multiple super interfaces to which methods could be migrated.
NoNativeMethods=Method ''{0}'' is native.
NoMoreThanOneMethod=Can't migrate more than one method at a time.
IncompatibleLanguageConstruct=Moving ''{0}'', which contains lambdas, to destination type ''{1}'' will result in compile errors, since the destination is not J2SE 1.8 compatible.
DestinationTypeMustBePureInterface=''{0}'' must be a pure interface.
DestinationInterfaceMustOnlyDeclareTheMethodToMigrate=''{0}'' must only declare the method that will be migrated.
NoDestinationInterface=No destination interface exists.
TargetMethodIsAlreadyDefault=Method ''{0}'' is already a default method.
DestinationInterfaceHasAnnotations=''{0}'' is annotated.
DestinationInterfaceIsNotTopLevel=''{0}'' is not a top-level interface.
DestinationInterfaceDeclaresFields=''{0}'' declares fields.
DestinationInterfaceExtendsInterface=''{0}'' extends interface.
DestinationInterfaceDeclaresTypeParameters=''{0}'' declares type parameters.
DestinationInterfaceDeclaresMemberTypes=''{0}'' declares member types.
DestinationInterfaceDoesNotExist=Destination interface ''{0}'' does not exist.
DestinationInterfaceNotWritable=Need access to source code of destination interface ''{0}''.
DestinationInterfaceIsMember=''{0}'' is a member interface.
DestinationInterfaceHierarchyContainsInvalidClass=Destination interface ''{0}'''s hierarchy contains an invalid class.
DestinationInterfaceHierarchyContainsInvalidInterfaces=Destination interface ''{0}'''s hierarchy contains an invalid interface.
DestinationInterfaceHierarchyContainsSubtype=Destination interface ''{0}'''s hierarchy contains a subtype.
DestinationInterfaceHierarchyContainsSuperInterface=Destination interface ''{0}'''s hierarchy contains a super interface.
DestinationInterfaceHierarchyContainsSupertype=Destination interface ''{0}'''s hierarchy contains a super type.
DestinationInterfaceHasExtendingInterface=Destination interface ''{0}'' has extending interfaces.
DestinationInterfaceHasInvalidImplementingClass=Destination interface ''{0}'' has an invalid implementing class.
DestinationInterfaceHasInvalidImplementingClass=Destination interface ''{0}'' has an invalid implementing class.
DeclaringTypeHierarchyContainsInvalidClass=Declaring type ''{0}'''s hierarchy contains an invalid class.
DeclaringTypeHierarchyContainsInvalidInterface=Declaring type ''{0}'''s hierarchy contains an invalid interface.
DeclaringTypeContainsInvalidSupertype=Declaring type ''{0}''' has an invalid super type.
DestinationInterfaceIsFunctional=Destination interface ''{0}'' is functional.